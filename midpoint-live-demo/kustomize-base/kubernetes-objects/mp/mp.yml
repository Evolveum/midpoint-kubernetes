apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mp
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mp
    spec:
      volumes:
        - name: shared-data-tomcat
          emptyDir: {}
        - name: nfs-volume
          emptyDir: {}
        - name: mp-home
          emptyDir: {}
        - name: mp-lib
          emptyDir: {}
        - name: mp-secret
          secret:
            secretName: mp-secret
            defaultMode: 420
        - name: pio
          projected:
            sources:
               - configMap:
                   name: users-map
               - configMap:
                   name: pio-map-1
               - configMap:
                   name: pio-map-2
               - configMap:
                   name: roles-map
        - name: login-page
          configMap:
            name: login-page-map
            defaultMode: 0777
        - name: import
          configMap:
            name: hr-map
            defaultMode: 420
        - name: tomcat-config
          configMap:
            name: tomcat-map
            defaultMode: 420
        - name: extension-schema
          configMap:
            name: extension-map
            defaultMode: 420
      initContainers:
        - name: mp-config-init
          image: 'evolveum/midpoint:4.8.2-alpine'
          command:
            - /bin/bash
            - "-c"
            - |
              /mnt/page/addLoginPage.sh
              /opt/midpoint/bin/midpoint.sh init-native
          env:
            - name: MP_INIT_CFG
              value: /opt/mp-home
          resources: {}
          volumeMounts:
            - name: mp-home
              mountPath: /opt/mp-home
            - name: login-page
              mountPath: /mnt/page
            - name: mp-lib
              mountPath: /mnt/lib
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        - name: init
          image: 'alpine:3'
          command:
            - /bin/sh
            - '-c'
            - >-
              cd /mnt/ && wget
              https://download.evolveum.com/dummy-hr-and-addressbook-for-live-demo/addressbook.war
              && wget
              https://download.evolveum.com/dummy-hr-and-addressbook-for-live-demo/hr.war
          resources: {}
          volumeMounts:
            - name: shared-data-tomcat
              mountPath: /mnt/
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      containers:
        - name: tomcat
          image: 'tomcat:10-jdk11-corretto'
          ports:
            - name: tomcat-port
              containerPort: 8081
              protocol: TCP
          env:
            - name: POD_NS
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          resources: {}
          volumeMounts:
            - name: shared-data-tomcat
              mountPath: /usr/local/tomcat/webapps-javaee/
            - name: nfs-volume
              mountPath: /var/opt/
            - name: tomcat-config
              mountPath: /usr/local/tomcat/conf/server.xml
              subPath: server.xml
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        - name: mp
          image: 'evolveum/midpoint:4.8.2-alpine'
          ports:
            - name: gui
              containerPort: 8080
              protocol: TCP
          env:
            - name: MP_SET_midpoint_administrator_initialPassword
              value: IGA4ever
            - name: MP_ENTRY_POINT
              value: /opt/midpoint-dirs-docker-entrypoint
            - name: MP_SET_midpoint_keystore_keyStorePath
              value: /opt/midpoint/config-secrets/keystore.jceks
            - name: MP_SET_midpoint_keystore_keyStorePassword_FILE
              value: /opt/midpoint/config-secrets/keystore
            - name: MP_SET_midpoint_repository_database
              value: postgresql
            - name: POD_NS
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: MP_SET_midpoint_repository_jdbcUsername
              value: midpoint
            - name: MP_SET_midpoint_repository_jdbcPassword_FILE
              value: /opt/midpoint/config-secrets/password
            - name: MP_SET_midpoint_constants_LDAPADDRESS
              value: 'ldap-service.$(POD_NS).svc.cluster.local'
            - name: MP_SET_midpoint_constants_BOOKADDRESS
              value: 'addressbook-db-service.$(POD_NS).svc.cluster.local'
            - name: MP_SET_midpoint_constants_BOOKJDBCADDRESS
              value: 'jdbc:postgresql://addressbook-db-service.$(POD_NS).svc.cluster.local:5432/midpoint'
            - name: MP_SET_midpoint_repository_jdbcUrl
              value: >-
                jdbc:postgresql://mp-db-service.$(POD_NS).svc.cluster.local:5432/midpoint
            - name: MP_UNSET_midpoint_repository_hibernateHbm2ddl
              value: '1'
            - name: MP_SET_midpoint_nodeIdSource
              value: hostname
            - name: MP_SET_midpoint_taskManager_clustered
              value: 'true'
            - name: MP_NO_ENV_COMPAT
              value: '1'
            - name: MP_MEM_MAX
              value: 4096m
            - name: MP_MEM_INIT
              value: 2048m
            - name: TZ
              value: UTC
          resources: {}
          volumeMounts:
            - name: mp-secret
              mountPath: /opt/midpoint/config-secrets
            - name: pio
              mountPath: /opt/midpoint-dirs-docker-entrypoint/post-initial-objects
            - name: import
              mountPath: /opt/midpoint-dirs-docker-entrypoint/import
            - name: extension-schema
              mountPath: /opt/midpoint-dirs-docker-entrypoint/schema
            - name: nfs-volume
              mountPath: /opt/midpoint/var/import/
            - name: mp-home
              mountPath: /opt/midpoint/var
            - name: mp-lib
              mountPath: /opt/midpoint/lib
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  serviceName: mp-service
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  revisionHistoryLimit: 10

